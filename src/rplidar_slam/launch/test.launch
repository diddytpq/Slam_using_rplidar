<launch>
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <!-- <node pkg="tf" type="static_transform_publisher" name="tf_base_footprint_to_base_link" args="0 0 0 0 0 0 base_footprint base_link 100"/> -->
    <!-- <node pkg="tf" type="static_transform_publisher" name="tf_base_link_base_scan" args="0 0 0 0 0 0 base_link base_scan 100"/> -->
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="z_pos" default="0.0"/>
  
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/empty.world"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
    </include>
  
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  
    <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
  
    <arg name="set_base_frame" default="base_footprint"/>
    <arg name="set_odom_frame" default="odom"/>
    <arg name="set_map_frame"  default="map"/>

    <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
        <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
        <!--param name="serial_baudrate"     type="int"    value="256000"--><!--A3 -->
        <param name="frame_id"            type="string" value="base_scan"/>
        <param name="inverted"            type="bool"   value="false"/>
        <param name="angle_compensate"    type="bool"   value="true"/>
    </node>

    <!-- <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
        <arg name="model" value="$(arg model)"/>
    </include> -->

    <node pkg="gmapping" type="slam_gmapping" name="rplidar_slam_gmapping" output="screen">
        <param name="base_frame" value="$(arg set_base_frame)"/>
        <param name="odom_frame" value="$(arg set_odom_frame)"/>
        <!-- <param name="odom_frame" value="$(arg set_base_frame)"/> -->

        <param name="map_frame"  value="$(arg set_map_frame)"/>
        <rosparam command="load" file="$(find rplidar_slam)/config/gmapping_params.yaml" />
      </node>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" value=""/>
    </node>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find rplidar_slam)/rviz/rplidar_slam.rviz" />
</launch>
